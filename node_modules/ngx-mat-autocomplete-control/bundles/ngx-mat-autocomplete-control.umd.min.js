!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/autocomplete"),require("@angular/material/input"),require("@angular/material/select"),require("@angular/material/form-field"),require("@angular/platform-browser/animations"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ngx-mat-autocomplete-control",["exports","@angular/core","@angular/forms","@angular/material/autocomplete","@angular/material/input","@angular/material/select","@angular/material/form-field","@angular/platform-browser/animations","@angular/platform-browser"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-mat-autocomplete-control"]={},e.ng.core,e.ng.forms,e.ng.material.autocomplete,e.ng.material.input,e.ng.material.select,e.ng.material.formField,e.ng.platformBrowser.animations,e.ng.platformBrowser)}(this,(function(e,t,r,o,n,a,i,l,u){"use strict";var s=function(){};s.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new s},token:s,providedIn:"root"}),s.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],s.ctorParameters=function(){return[]};var p=function(){function e(){this.appearance="outline",this.options=[],this.required=!1,this.showDefaultSelect=!1,this.disabled=!1,this.showPlaceholder=!0,this.selectionChange=new t.EventEmitter,this.propValueEvent=new t.EventEmitter,this.keyUp=!1,this.filterList=[]}return e.prototype.ngOnChanges=function(e){var t=this;e&&(+this.value>0||this.value.length>0)&&(this.tempValue=this.control.value,this.setItems(""),setTimeout((function(){t.control.setValue(t.tempValue)}),0)),e&&e.disabled&&e.disabled.currentValue?this.control.disable():(this.disabled=!1,this.control.enable())},e.prototype.ngOnInit=function(){this.options&&this.setItems("")},e.prototype.keyUpFunction=function(e,t){var r=this;if("Enter"===e.key||"Tab"===e.key)return e.preventDefault(),!1;t?(this.filterList.filter((function(e){return e[r.refName].toLowerCase()===t.toLowerCase()})).length,this.keyUp=!0):this.keyUp=!1,this.propValueEvent.emit({propertyName:this.control,value:t})},Object.defineProperty(e.prototype,"displayDataFn",{get:function(){var e=this;return function(t){return null==t||void 0===t||""===t?null:e.filterList&&e.filterList.length>0&&(t=e.options.find((function(r){return r[e.refId]===t})))?t[e.refName]:null}},enumerable:!1,configurable:!0}),e.prototype.setItems=function(e){var t=this;e||this.assignResourceCopy(),e&&(this.filterList=Object.assign([],this.options).filter((function(r){return r[t.refName].toLowerCase().indexOf(e.toLowerCase())>-1})))},e.prototype.assignResourceCopy=function(){this.filterList=Object.assign([],this.options)},e.prototype.checkValidValue=function(){var e=this.control.value;""===e||null==e||(this.keyUp?this.control.setErrors({incorrect:!0}):this.control.setErrors(null))},e.prototype.checVal=function(e){var t=this;if(!1===this.showDefaultSelect){var r=this.options.filter((function(r){return r[t.refName].toLowerCase().trim()===e.toLowerCase().trim()}));if(r.length>0){var o=r[0];this.control.setValue(o[this.refId]),this.keyUp=!1}this.checkValidValue()}},e.prototype.emitValues=function(e){this.selectionChange.emit(e.option.value),this.propValueEvent.emit({propertyName:this.control,value:e.option.value})},e}();p.decorators=[{type:t.Component,args:[{selector:"ngx-mat-autocomplete-control",template:'  <mat-form-field [appearance]="appearance" style="width: 100%;">\r\n    <mat-label>{{label}} </mat-label>\r\n    <input #inputvalue  matInput [placeholder]="showPlaceholder?label:\'\'" \r\n     [matAutocomplete]="autoCmpt" [formControl]="control" \r\n      (focus)="setItems(inputvalue.value)" (keypress)="keyUpFunction($event, inputvalue.value)"\r\n      (input)="setItems(inputvalue.value)"\r\n       (blur)="checVal(inputvalue.value);" (click)="inputvalue.select()"\r\n      [required]="required" />\r\n  \r\n    <mat-error *ngIf="control?.errors?.required && required">\r\n      {{label}} is required\r\n    </mat-error>\r\n    <mat-error *ngIf="control?.errors?.incorrect">\r\n      {{label}} is not valid.\r\n    </mat-error>\r\n  \r\n    <mat-autocomplete #autoCmpt="matAutocomplete" [displayWith]="displayDataFn"\r\n     (optionSelected)="emitValues($event)">\r\n      \x3c!-- <mat-option>-------Select {{label}}-------</mat-option> --\x3e\r\n      <mat-option [value]="data[refId]" *ngFor="let data of filterList" class="autocom-option autocom-tr">\r\n        <span [innerHTML]="data[refName] | highlight: inputvalue.value "></span>\r\n      </mat-option>\r\n      <mat-option *ngIf="filterList.length == 0">\r\n        <div class="no-record"><span>No Data Found</span></div>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  \r\n  </mat-form-field>',styles:['.no-record{color:#78797b;font-size:14px;font-weight:300;line-height:.5;margin:.5rem 0;padding:30px 20px}.no-record span:after,.no-record span:before{border-bottom:1px solid rgba(0,0,0,.1);border-top:1px solid rgba(0,0,0,.1);content:"";display:inline-block;height:3px;position:relative;top:-2px;width:20px}.no-record span:before{margin-right:5px}.no-record span:after{margin-left:5px}.mat-option-text b{color:#3f51b5}']}]}],p.ctorParameters=function(){return[]},p.propDecorators={control:[{type:t.Input}],refId:[{type:t.Input}],refName:[{type:t.Input}],label:[{type:t.Input}],appearance:[{type:t.Input}],options:[{type:t.Input}],required:[{type:t.Input}],showDefaultSelect:[{type:t.Input}],disabled:[{type:t.Input}],value:[{type:t.Input}],showPlaceholder:[{type:t.Input}],selectionChange:[{type:t.Output}],propValueEvent:[{type:t.Output}]};var c=function(){function e(e){this.sanitizer=e}return e.prototype.transform=function(e,t){if(t&&e){var r=t.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");r=r.split(" ").filter((function(e){return e.length>0})).join("|");var o=new RegExp(r,"gi");return this.sanitizer.bypassSecurityTrustHtml(String(e).replace(o,(function(e){return"<b>"+e+"</b>"})))}return e},e}();c.decorators=[{type:t.Pipe,args:[{name:"highlight"}]}],c.ctorParameters=function(){return[{type:u.DomSanitizer}]};var m=function(){};m.decorators=[{type:t.NgModule,args:[{declarations:[p,c],imports:[r.FormsModule,r.ReactiveFormsModule,o.MatAutocompleteModule,n.MatInputModule,a.MatSelectModule,i.MatFormFieldModule,l.BrowserAnimationsModule],exports:[p,r.FormsModule,r.ReactiveFormsModule,o.MatAutocompleteModule,n.MatInputModule,a.MatSelectModule,i.MatFormFieldModule,l.BrowserAnimationsModule]}]}],e.NgxMatAutocompleteControlComponent=p,e.NgxMatAutocompleteControlModule=m,e.NgxMatAutocompleteControlService=s,e.ɵa=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-mat-autocomplete-control.umd.min.js.map