{"version":3,"file":"ngx-mat-autocomplete-control.umd.js","sources":["../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.service.ts","../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.component.ts","../../projects/ngx-mat-autocomplete-control/src/lib/highlight.pipe.ts","../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.module.ts","../../../projects/ngx-mat-autocomplete-control/src/public-api.ts","../../../projects/ngx-mat-autocomplete-control/src/ngx-mat-autocomplete-control.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMatAutocompleteControlService {\n\n  constructor() { }\n}\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'ngx-mat-autocomplete-control',\n  templateUrl: './autocomplete.html',\n  styleUrls: ['./autocomplete.css']\n})\nexport class NgxMatAutocompleteControlComponent implements OnInit, OnChanges {\n  @Input() control: FormControl;\n  @Input() refId: string;\n  @Input() refName: string;\n  @Input() label: string;\n  @Input() appearance = 'outline';\n  @Input() options = [];\n  @Input() required = false;\n  @Input() showDefaultSelect = false;\n  @Input() disabled = false;\n  @Input() value: any;\n  @Input() showPlaceholder = true; \n  // @Input() inputText = '';\n  // @Input() reactiveForm = true;\n  // @Input() modelName = true;\n\n  @Output() selectionChange = new EventEmitter<any>();\n  @Output() propValueEvent = new EventEmitter<any>();\n  keyUp = false;\n  filterList = [];\n  tempValue: any;\n  constructor() {\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (+this.value > 0 || this.value.length > 0) {\n        this.tempValue = this.control.value;\n        this.setItems('');\n        setTimeout(() => {\n          this.control.setValue(this.tempValue);\n        }, 0);\n      }\n\n    }\n    if (changes && changes.disabled && changes.disabled.currentValue) {\n      this.control.disable();\n    } else {\n      this.disabled = false;\n      this.control.enable();\n\n    }\n  }\n  ngOnInit() {\n    if (this.options) {\n      this.setItems('');\n    }\n  }\n  keyUpFunction(event, value) {\n    if (event.key === 'Enter' || event.key === 'Tab') {\n      event.preventDefault();\n      return false;\n    } else {\n      if (value) {\n        const data = this.filterList.filter(e =>\n          e[this.refName].toLowerCase() === value.toLowerCase());\n        if (data.length > 0) {\n          this.keyUp = true;\n        } else {\n          this.keyUp = true;\n        }\n      } else {\n        this.keyUp = false;\n      }\n      this.propValueEvent.emit({\n        propertyName: this.control,\n        // tslint:disable-next-line: object-literal-shorthand\n        value: value\n      });\n    }\n  }\n  get displayDataFn() {\n    const dataNew = (data) => {\n      if (data == null || data === undefined || data === '') {\n        return null;\n      } else {\n        if (this.filterList && this.filterList.length > 0) {\n          data = this.options.find(x => x[this.refId] === data);\n          if (data) {\n            return data[this.refName];\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    };\n    return dataNew;\n  }\n  // Resource ..\n  setItems(value) {\n    if (!value) { this.assignResourceCopy(); }\n    if (value) {\n      this.filterList = Object.assign([], this.options).filter(\n        item => ((item[this.refName].toLowerCase().indexOf(value.toLowerCase()) > -1)));\n    }\n\n  }\n  assignResourceCopy() {\n    this.filterList = Object.assign([], this.options);\n  }\n\n  checkValidValue() {\n    const value = this.control.value;\n    if (value === '' || value == null) {\n    } else if (this.keyUp) {\n      this.control.setErrors({ incorrect: true });\n    } else {\n      this.control.setErrors(null);\n    }\n  }\n\n  checVal(value) {\n    if (this.showDefaultSelect === false) {\n      const data: any = this.options.filter(e => e[this.refName].toLowerCase().trim() ===\n        value.toLowerCase().trim());\n      if (data.length > 0) {\n        const datax = data[0];\n        this.control\n          .setValue(datax[this.refId]);\n        // this.selectionChange.emit({event:{option:datax[this.refId]}});\n        this.keyUp = false;\n      }\n      this.checkValidValue();\n    }\n  }\n  emitValues(event) {\n    this.selectionChange.emit(event.option.value);\n    this.propValueEvent.emit({\n      propertyName: this.control,\n      value: event.option.value\n    });\n  }\n}","import { PipeTransform, Pipe } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  constructor(public sanitizer: DomSanitizer) {\n  }\n  transform(text: string, search): SafeHtml {\n    if (search && text) {\n      let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n      pattern = pattern.split(' ').filter((t) => {\n        return t.length > 0;\n      }).join('|');\n      const regex = new RegExp(pattern, 'gi');\n      return this.sanitizer.bypassSecurityTrustHtml(\n        String(text).replace(regex, (match) => `<b>${match}</b>`)\n      );\n\n    } else {\n      return text;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxMatAutocompleteControlComponent } from './ngx-mat-autocomplete-control.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HighlightPipe } from './highlight.pipe';\n\n@NgModule({\n  declarations: [NgxMatAutocompleteControlComponent, HighlightPipe],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule\n  ],\n  exports: [NgxMatAutocompleteControlComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule]\n})\nexport class NgxMatAutocompleteControlModule { }\n","/*\n * Public API Surface of ngx-mat-autocomplete-control\n */\n\nexport * from './lib/ngx-mat-autocomplete-control.service';\nexport * from './lib/ngx-mat-autocomplete-control.component';\nexport * from './lib/ngx-mat-autocomplete-control.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HighlightPipe as Éµa} from './lib/highlight.pipe';"],"names":["Injectable","EventEmitter","Component","Input","Output","Pipe","DomSanitizer","NgModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatInputModule","MatSelectModule","MatFormFieldModule","BrowserAnimationsModule"],"mappings":"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"}