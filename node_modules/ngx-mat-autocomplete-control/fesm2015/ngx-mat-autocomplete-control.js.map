{"version":3,"file":"ngx-mat-autocomplete-control.js","sources":["../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.service.ts","../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.component.ts","../../projects/ngx-mat-autocomplete-control/src/lib/highlight.pipe.ts","../../projects/ngx-mat-autocomplete-control/src/lib/ngx-mat-autocomplete-control.module.ts","../../../projects/ngx-mat-autocomplete-control/src/public-api.ts","../../../projects/ngx-mat-autocomplete-control/src/ngx-mat-autocomplete-control.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMatAutocompleteControlService {\n\n  constructor() { }\n}\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'ngx-mat-autocomplete-control',\n  templateUrl: './autocomplete.html',\n  styleUrls: ['./autocomplete.css']\n})\nexport class NgxMatAutocompleteControlComponent implements OnInit, OnChanges {\n  @Input() control: FormControl;\n  @Input() refId: string;\n  @Input() refName: string;\n  @Input() label: string;\n  @Input() appearance = 'outline';\n  @Input() options = [];\n  @Input() required = false;\n  @Input() showDefaultSelect = false;\n  @Input() disabled = false;\n  @Input() value: any;\n  @Input() showPlaceholder = true; \n  // @Input() inputText = '';\n  // @Input() reactiveForm = true;\n  // @Input() modelName = true;\n\n  @Output() selectionChange = new EventEmitter<any>();\n  @Output() propValueEvent = new EventEmitter<any>();\n  keyUp = false;\n  filterList = [];\n  tempValue: any;\n  constructor() {\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (+this.value > 0 || this.value.length > 0) {\n        this.tempValue = this.control.value;\n        this.setItems('');\n        setTimeout(() => {\n          this.control.setValue(this.tempValue);\n        }, 0);\n      }\n\n    }\n    if (changes && changes.disabled && changes.disabled.currentValue) {\n      this.control.disable();\n    } else {\n      this.disabled = false;\n      this.control.enable();\n\n    }\n  }\n  ngOnInit() {\n    if (this.options) {\n      this.setItems('');\n    }\n  }\n  keyUpFunction(event, value) {\n    if (event.key === 'Enter' || event.key === 'Tab') {\n      event.preventDefault();\n      return false;\n    } else {\n      if (value) {\n        const data = this.filterList.filter(e =>\n          e[this.refName].toLowerCase() === value.toLowerCase());\n        if (data.length > 0) {\n          this.keyUp = true;\n        } else {\n          this.keyUp = true;\n        }\n      } else {\n        this.keyUp = false;\n      }\n      this.propValueEvent.emit({\n        propertyName: this.control,\n        // tslint:disable-next-line: object-literal-shorthand\n        value: value\n      });\n    }\n  }\n  get displayDataFn() {\n    const dataNew = (data) => {\n      if (data == null || data === undefined || data === '') {\n        return null;\n      } else {\n        if (this.filterList && this.filterList.length > 0) {\n          data = this.options.find(x => x[this.refId] === data);\n          if (data) {\n            return data[this.refName];\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    };\n    return dataNew;\n  }\n  // Resource ..\n  setItems(value) {\n    if (!value) { this.assignResourceCopy(); }\n    if (value) {\n      this.filterList = Object.assign([], this.options).filter(\n        item => ((item[this.refName].toLowerCase().indexOf(value.toLowerCase()) > -1)));\n    }\n\n  }\n  assignResourceCopy() {\n    this.filterList = Object.assign([], this.options);\n  }\n\n  checkValidValue() {\n    const value = this.control.value;\n    if (value === '' || value == null) {\n    } else if (this.keyUp) {\n      this.control.setErrors({ incorrect: true });\n    } else {\n      this.control.setErrors(null);\n    }\n  }\n\n  checVal(value) {\n    if (this.showDefaultSelect === false) {\n      const data: any = this.options.filter(e => e[this.refName].toLowerCase().trim() ===\n        value.toLowerCase().trim());\n      if (data.length > 0) {\n        const datax = data[0];\n        this.control\n          .setValue(datax[this.refId]);\n        // this.selectionChange.emit({event:{option:datax[this.refId]}});\n        this.keyUp = false;\n      }\n      this.checkValidValue();\n    }\n  }\n  emitValues(event) {\n    this.selectionChange.emit(event.option.value);\n    this.propValueEvent.emit({\n      propertyName: this.control,\n      value: event.option.value\n    });\n  }\n}","import { PipeTransform, Pipe } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  constructor(public sanitizer: DomSanitizer) {\n  }\n  transform(text: string, search): SafeHtml {\n    if (search && text) {\n      let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n      pattern = pattern.split(' ').filter((t) => {\n        return t.length > 0;\n      }).join('|');\n      const regex = new RegExp(pattern, 'gi');\n      return this.sanitizer.bypassSecurityTrustHtml(\n        String(text).replace(regex, (match) => `<b>${match}</b>`)\n      );\n\n    } else {\n      return text;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxMatAutocompleteControlComponent } from './ngx-mat-autocomplete-control.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HighlightPipe } from './highlight.pipe';\n\n@NgModule({\n  declarations: [NgxMatAutocompleteControlComponent, HighlightPipe],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule\n  ],\n  exports: [NgxMatAutocompleteControlComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule]\n})\nexport class NgxMatAutocompleteControlModule { }\n","/*\n * Public API Surface of ngx-mat-autocomplete-control\n */\n\nexport * from './lib/ngx-mat-autocomplete-control.service';\nexport * from './lib/ngx-mat-autocomplete-control.component';\nexport * from './lib/ngx-mat-autocomplete-control.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HighlightPipe as Éµa} from './lib/highlight.pipe';"],"names":[],"mappings":"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"}